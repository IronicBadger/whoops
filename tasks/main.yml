---
# http://docs.ansible.com/ansible/latest/ec2_module.html

- block:
    - name: Create EC2 key.
      ec2_key:
        force: "{{ item.force_key | default(omit) }}"
        key_material: "{{ lookup('file', item.key_material) | default(omit) }}"
        name: "{{ item.name }}"
        region: "{{ item.region | default(region) | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        validate_certs: "{{ item.validate_certs | default(validate_certs) | default(omit) }}"
        wait: "{{ item.wait | default(omit) }}"
        wait_timeout: "{{ item.wait_timeout | default(omit) }}"
        aws_access_key: "{{ sts_aws_access_key | default(omit) }}"
        aws_secret_key: "{{ sts_aws_secret_key | default(omit) }}"
        security_token: "{{ sts_security_token | default(omit) }}"
      with_items:
        - "{{ ec2_key }}"
      register: ec2_key_register
      when: ec2_key is defined
      tags:
        - build

    - name: Debug ec2_key.
      debug:
        var: ec2_key_register
        verbosity: 3
      when: ec2_key_register is defined
      tags:
        - facts

    - name: Set fact with new EC2_key name.
      set_fact:
        new_ec2_key: "{{ item.key.name }}"
      with_items: "{{ ec2_key_register.results }}"
      when:
        - ec2_key is defined
        - build_full_vpc is defined
        - build_full_vpc
      tags:
        - build
        - facts
  run_once: True
  tags:
    - infrastructure
    - aws

- block:
    - name: Create EC2 instances.
      ec2:
        assign_public_ip: "{{ item.1.assign_public_ip | default(item.0.assign_public_ip) | default(omit) }}"
        count_tag: "{{ item.1.count_tag | default(item.0.count_tag) | default(omit) }}"
        exact_count: "{{ item.1.count_nodes | default(item.0.count_nodes) | default(omit) }}"
        group: "{{ item.1.group | default(item.0.group) | default(omit) }}"
        group_id: "{{ item.1.group_id | default(item.0.group_id) | default(omit) }}"
        id: "{{ item.1.id | default(item.0.id) | default(omit) }}"
        image: "{{ item.1.ami | default(item.0.ami) | default(ami) }}"
        instance_tags: "{{ item.1.tags | default({}) | combine (item.0.tags | default({})) }}"
        instance_type: "{{ item.1.instance_type | default(item.0.instance_type) | default(instance_type) }}"
        kernel: "{{ item.1.kernel_eki | default(item.0.kernel_eki) | default(omit) }}"
        key_name: "{{ new_ec2_key | default(item.1.key_pair) | default(item.0.key_pair) | default(key_pair) | default(omit) }}"
        monitoring: "{{ item.1.detailed_monitor | default(item.0.detailed_monitor) | default(omit) }}"
        network_interfaces: "{{ item.1.net_interfaces | default(item.0.net_interfaces) | default(omit) }}"
        private_ip: "{{ item.1.private_ip | default(item.0.private_ip) | default(item.private_ip) | default(omit) }}"
        ramdisk: "{{ item.1.ramdisk | default(item.0.ramdisk) | default(omit) }}"
        region: "{{ item.1.region | default(item.0.region) | default(region) | default(omit) }}"
        security_token: "{{ item.1.security_token | default(item.0.security_token) | default(security_token) | default(omit) }}"
        source_dest_check: "{{ item.1.source_dest_check | default(item.0.source_dest_check) | default(omit) }}"
        state: "{{ item.1.state | default(item.0.state) | default(omit) }}"
        tenancy: "{{ item.1.tenancy | default(item.0.tenancy) | default(omit) }}"
        termination_protection: "{{ item.1.term_protect | default(item.0.term_protect) | default(omit) }}"
        volumes: "{{ item.1.volumes |default([]) | union(item.0.volumes |default([])) }}"
        user_data: "{{ item.1.bootstrap | default(item.0.bootstrap) | default(bootstrap) | default(omit) }}"
        wait: "{{ item.1.wait | default(item.0.wait) | default(omit) }}"
        wait_timeout: "{{ item.1.wait_timeout | default(item.0.wait_timeout) | default(omit) }}"
        vpc_subnet_id: "{{ item.1.subnet_id | default(item.0.subnet_id) | default(omit) }}"
        zone: "{{ item.1.zone | default(item.0.zone) | default(omit) }}"
        aws_access_key: "{{ sts_aws_access_key | default(omit) }}"
        aws_secret_key: "{{ sts_aws_secret_key | default(omit) }}"
        security_token: "{{ sts_security_token | default(omit) }}"
      with_subelements:
        - "{{ ec2_instances }}"
        - repeat
      register: ec2_register
      tags:
        - build

    - name: Debug ec2.
      debug:
        var: ec2_register
        verbosity: 3
      when: ec2_register is defined
      tags:
        - facts

    - name: Gather EC2 Instance Facts.
      ec2_remote_facts:
        filters: "{{ item.filters | default({}) }}"
        region: "{{ item.region | default(region) | default(omit) }}"
        validate_certs: "{{ item.validate_certs | | default(validate_certs) | default(omit) }}"
        aws_access_key: "{{ sts_aws_access_key | default(omit) }}"
        aws_secret_key: "{{ sts_aws_secret_key | default(omit) }}"
        security_token: "{{ sts_security_token | default(omit) }}"
      register: ec2_facts
      with_items: "{{ facts.ec2 }}"
      when:
        - facts is defined
        - facts.ec2 is defined
      tags:
        - facts
        - build

    - name: Debug EC2 Instance Facts.
      debug:
        var: ec2_facts
        verbosity: 3
      when: ec2_facts is defined
      tags:
        - facts
  run_once: True
  tags:
    - infrastructure
    - aws
...
